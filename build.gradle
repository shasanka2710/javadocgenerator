plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.sonarqube" version "6.0.1.5171"
}

sonar {
	properties {
		property "sonar.projectKey", "javadocgenerator"
		property "sonar.projectName", "javadocgenerator"
	}
}

group = 'com.org'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springAiVersion', "1.0.0-M4")
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.ai:spring-ai-vertex-ai-gemini-spring-boot-starter:1.0.0-M4'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.0.RELEASE'
	//implementation 'org.springframework.ai:spring-ai-azure-openai-spring-boot-starter'
	//implementation 'org.springframework.ai:spring-ai-ollama-spring-boot-starter'
	//implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring Boot Data JPA (For H2 Database)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// H2 Database
	runtimeOnly 'com.h2database:h2'
	//java parser
	implementation 'com.github.javaparser:javaparser-core:3.26.3'
	implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.26.3'

	//spoon parser
	// https://mvnrepository.com/artifact/fr.inria.gforge.spoon/spoon-core
	implementation group: 'fr.inria.gforge.spoon', name: 'spoon-core', version: '11.2.0'

	implementation 'org.eclipse.jgit:org.eclipse.jgit:7.1.0.202411261347-r'
	implementation 'org.slf4j:slf4j-api:2.0.7'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.2.0'
	// Apache HttpClient for additional HTTP operations (optional)
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.4'
	implementation 'org.kohsuke:github-api:1.123'
	//implementation 'dev.langchain4j:langchain4j:0.23.0' // Replace with the latest version

	// Jackson for JSON parsing
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
	testImplementation 'org.junit.platform:junit-platform-commons:1.10.0'
	testImplementation 'org.junit.platform:junit-platform-engine:1.10.0'
	testImplementation 'org.mockito:mockito-core:5.5.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
